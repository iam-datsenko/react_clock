{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","clockTime","Date","timerId","this","window","setInterval","setState","console","info","toUTCString","slice","clearInterval","clockName","props","className","Component","getRandomName","value","now","toString","App","hasClock","clockRandomNameId","clickRMB","event","preventDefault","clickLMB","document","addEventListener","_prevProps","prevState","debug","removeEventListener","ReactDOM","render","getElementById"],"mappings":"6MAaaA,EAAb,4MACEC,MAAQ,CACNC,UAAW,IAAIC,KACfC,QAAS,GAHb,uDAME,WAAqB,IAAD,OAClBC,KAAKJ,MAAMG,QAAUE,OAAOC,aAAY,WACtC,EAAKC,SAAS,CAAEN,UAAW,IAAIC,SAC9B,OATP,gCAYE,WACEM,QAAQC,KAAKL,KAAKJ,MAAMC,UAAUS,cAAcC,OAAO,IAAK,MAbhE,kCAgBE,WACEN,OAAOO,cAAcR,KAAKJ,MAAMG,WAjBpC,oBAoBE,WACE,IAAQU,EAAcT,KAAKU,MAAnBD,UACAZ,EAAcG,KAAKJ,MAAnBC,UAER,OACE,sBAAKc,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGF,IAGF,YAED,sBAAME,UAAU,cAAhB,SACGd,EAAUS,cAAcC,OAAO,IAAK,YAjC/C,GAA2BK,aCR3B,SAASC,IACP,IAAMC,EAAQhB,KAAKiB,MAAMC,WAAWT,OAAO,GAE3C,MAAM,SAAN,OAAgBO,GASX,IAAMG,EAAb,4MACErB,MAAQ,CACNsB,UAAU,EACVT,UAAW,UACXU,kBAAmB,GAJvB,EA2BEC,SAAW,SAACC,GACVA,EAAMC,iBACN,EAAKnB,SAAS,CAAEe,UAAU,KA7B9B,EAgCEK,SAAW,WACT,EAAKpB,SAAS,CAAEe,UAAU,KAjC9B,uDAOE,WAAqB,IAAD,OAClBM,SAASC,iBAAiB,cAAezB,KAAKoB,UAC9CI,SAASC,iBAAiB,QAASzB,KAAKuB,UACxCvB,KAAKJ,MAAMuB,kBAAoBlB,OAAOC,aAAY,WAChD,EAAKC,SAAS,CAAEM,UAAWI,QAC1B,QAZP,gCAeE,SAAmBa,EAAgBC,GAC7BA,EAAUlB,YAAcT,KAAKJ,MAAMa,WAAaT,KAAKJ,MAAMsB,UAC7Dd,QAAQwB,MAAR,uBAA8BD,EAAUlB,UAAxC,eAAwDT,KAAKJ,MAAMa,cAjBzE,kCAqBE,WACEe,SAASK,oBAAoB,cAAe7B,KAAKoB,UACjDI,SAASK,oBAAoB,QAAS7B,KAAKuB,UAC3CtB,OAAOO,cAAcR,KAAKJ,MAAMuB,qBAxBpC,oBAoCE,WACE,MAAgCnB,KAAKJ,MAA7BsB,EAAR,EAAQA,SAAUT,EAAlB,EAAkBA,UAElB,OACE,sBAAKE,UAAU,MAAf,UACE,6CAECO,GACC,cAAC,EAAD,CAAOA,SAAUA,EAAUT,UAAWA,WA5ChD,GAAyBG,aCdzBkB,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.750e233c.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport { Component } from 'react';\n\ntype Props = {\n  hasClock: boolean,\n  clockName: string,\n};\n\ntype State = {\n  clockTime: Date;\n  timerId: number,\n};\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    clockTime: new Date(),\n    timerId: 0,\n  };\n\n  componentDidMount() {\n    this.state.timerId = window.setInterval(() => {\n      this.setState({ clockTime: new Date() });\n    }, 1000);\n  }\n\n  componentDidUpdate() {\n    console.info(this.state.clockTime.toUTCString().slice(-12, -4));\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.state.timerId);\n  }\n\n  render() {\n    const { clockName } = this.props;\n    const { clockTime } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {clockTime.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","/* eslint-disable no-console */\nimport { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n  clockRandomNameId: number;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n    clockRandomNameId: 0,\n  };\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.clickRMB);\n    document.addEventListener('click', this.clickLMB);\n    this.state.clockRandomNameId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentDidUpdate(_prevProps: {}, prevState: State) {\n    if (prevState.clockName !== this.state.clockName && this.state.hasClock) {\n      console.debug(`Renamed from ${prevState.clockName} to ${this.state.clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('contextmenu', this.clickRMB);\n    document.removeEventListener('click', this.clickLMB);\n    window.clearInterval(this.state.clockRandomNameId);\n  }\n\n  clickRMB = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  clickLMB = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && (\n          <Clock hasClock={hasClock} clockName={clockName} />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}